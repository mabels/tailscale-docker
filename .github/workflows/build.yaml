name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '**' ]

jobs:
  prepare:
    name: Prepare Versions
    runs-on: ['self-hosted', 'Linux']
    steps:
      - uses: actions/checkout@v2

      - shell: bash
        env:
          NECKLESS_PRIVKEY: ${{ secrets.NECKLESS_PRIVKEY }}
        run: |
          rm -f .build_versions
          npm install
          npm run --silent query tailscale/tailscale >> .build_versions
          cat .build_versions
          tar cf prepare.tar .build_versions

      - name: Upload prepare.tar
        uses: actions/upload-artifact@v1
        with:
          name: prepare.tar
          path: prepare.tar

  update-manifest:
    runs-on: ['self-hosted', 'linux', 'X64']
    name: Update-Manifest
    needs:
      - docker-build
      - fromsource-build
    steps:
      - uses: actions/checkout@v2

      - name: extract prepare.tar
        uses: actions/download-artifact@v1
        with:
          name: prepare.tar

      - name: Write Manifest
        env:
          NECKLESS_PRIVKEY: ${{ secrets.NECKLESS_PRIVKEY }}
        run: |
          tar xf prepare.tar/prepare.tar
          eval $(cat .build_versions)
          TAG=$TAILSCALE_TAILSCALE_VERSION
          GITVER=$(git rev-parse --short HEAD)
          export DOCKER_CONFIG=$HOME/.docker
          neckless kv ls --onlyValue DOCKER_PASSWORD | \
            docker login docker.io -u $(neckless kv ls --onlyValue DOCKER_USER) --password-stdin
          echo "image: docker.io/fastandfearless/tailscale:latest" >> .build.manifest-latest.yaml
          echo "manifests:" >> .build.manifest-latest.yaml
          echo "  -" >> .build.manifest-latest.yaml
          echo "    image: docker.io/fastandfearless/tailscale:packaged-arm64v8-$TAG" >> .build.manifest-latest.yaml
          echo "    platform:" >> .build.manifest-latest.yaml
          echo "      architecture: arm64" >> .build.manifest-latest.yaml
          echo "      os: linux" >> .build.manifest-latest.yaml
          echo "  -" >> .build.manifest-latest.yaml
          echo "    image: docker.io/fastandfearless/tailscale:packaged-arm32v7-$TAG" >> .build.manifest-latest.yaml
          echo "    platform:" >> .build.manifest-latest.yaml
          echo "      architecture: arm" >> .build.manifest-latest.yaml
          echo "      os: linux" >> .build.manifest-latest.yaml
          echo "  -" >> .build.manifest-latest.yaml
          echo "    image: docker.io/fastandfearless/tailscale:packaged-amd64-$TAG" >> .build.manifest-latest.yaml
          echo "    platform:" >> .build.manifest-latest.yaml
          echo "      architecture: amd64" >> .build.manifest-latest.yaml
          echo "      os: linux" >> .build.manifest-latest.yaml
          manifest-tool push from-spec .build.manifest-latest.yaml
          echo "image: docker.io/fastandfearless/tailscale:packaged-latest" >> .build.manifest-packaged-latest.yaml
          echo "manifests:" >> .build.manifest-packaged-latest.yaml
          echo "  -" >> .build.manifest-packaged-latest.yaml
          echo "    image: docker.io/fastandfearless/tailscale:packaged-arm64v8-$TAG" >> .build.manifest-packaged-latest.yaml
          echo "    platform:" >> .build.manifest-packaged-latest.yaml
          echo "      architecture: arm64" >> .build.manifest-packaged-latest.yaml
          echo "      os: linux" >> .build.manifest-packaged-latest.yaml
          echo "  -" >> .build.manifest-packaged-latest.yaml
          echo "    image: docker.io/fastandfearless/tailscale:packaged-arm32v7-$TAG" >> .build.manifest-packaged-latest.yaml
          echo "    platform:" >> .build.manifest-packaged-latest.yaml
          echo "      architecture: arm" >> .build.manifest-packaged-latest.yaml
          echo "      os: linux" >> .build.manifest-packaged-latest.yaml
          echo "  -" >> .build.manifest-packaged-latest.yaml
          echo "    image: docker.io/fastandfearless/tailscale:packaged-amd64-$TAG" >> .build.manifest-packaged-latest.yaml
          echo "    platform:" >> .build.manifest-packaged-latest.yaml
          echo "      architecture: amd64" >> .build.manifest-packaged-latest.yaml
          echo "      os: linux" >> .build.manifest-packaged-latest.yaml
          manifest-tool push from-spec .build.manifest-packaged-latest.yaml
          echo "image: docker.io/fastandfearless/tailscale:fromsource-latest" >> .build.manifest-fromsource-latest.yaml
          echo "manifests:" >> .build.manifest-fromsource-latest.yaml
          echo "  -" >> .build.manifest-fromsource-latest.yaml
          echo "    image: docker.io/fastandfearless/tailscale:fromsource-arm64v8-$TAG" >> .build.manifest-fromsource-latest.yaml
          echo "    platform:" >> .build.manifest-fromsource-latest.yaml
          echo "      architecture: arm64" >> .build.manifest-fromsource-latest.yaml
          echo "      os: linux" >> .build.manifest-fromsource-latest.yaml
          echo "  -" >> .build.manifest-fromsource-latest.yaml
          echo "    image: docker.io/fastandfearless/tailscale:fromsource-arm32v7-$TAG" >> .build.manifest-fromsource-latest.yaml
          echo "    platform:" >> .build.manifest-fromsource-latest.yaml
          echo "      architecture: arm" >> .build.manifest-fromsource-latest.yaml
          echo "      os: linux" >> .build.manifest-fromsource-latest.yaml
          echo "  -" >> .build.manifest-fromsource-latest.yaml
          echo "    image: docker.io/fastandfearless/tailscale:fromsource-amd64-$TAG" >> .build.manifest-fromsource-latest.yaml
          echo "    platform:" >> .build.manifest-fromsource-latest.yaml
          echo "      architecture: amd64" >> .build.manifest-fromsource-latest.yaml
          echo "      os: linux" >> .build.manifest-fromsource-latest.yaml
          manifest-tool push from-spec .build.manifest-fromsource-latest.yaml

  docker-build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        include:
        - platform: ['self-hosted', 'linux', 'ARM64']
          dockerfile: packaged/Dockerfile.arm64v8

        - platform: ['self-hosted', 'linux', 'ARM']
          dockerfile: packaged/Dockerfile.arm32v7

        - platform: ['self-hosted', 'Linux', 'X64']
          dockerfile: packaged/Dockerfile.amd64

    name: Build ${{ matrix.platform }} ${{ matrix.dockerfile }}
    steps:
      - uses: actions/checkout@v2

      - name: extract prepare.tar
        uses: actions/download-artifact@v1
        with:
          name: prepare.tar

      - name: Build Docker Container ${{ matrix.platform }}
        env:
          NECKLESS_PRIVKEY: ${{ secrets.NECKLESS_PRIVKEY }}
        run: |
          tar xf prepare.tar/prepare.tar
          eval $(cat .build_versions)
          GITVER=$(git rev-parse --short HEAD)
          ARCH=$(echo ${{ matrix.dockerfile}} | sed 's/.*\.\([^\.][^\.]*\)$/\1/')
          TAG=fastandfearless/tailscale:$(dirname ${{ matrix.dockerfile}})-${ARCH}-${TAILSCALE_TAILSCALE_VERSION}-${GITVER}
          docker build --build-arg TAG=${TAG} -t $TAG -f ${{ matrix.dockerfile}} .
          neckless kv ls --onlyValue DOCKER_PASSWORD | \
            docker login docker.io -u $(neckless kv ls --onlyValue DOCKER_USER) --password-stdin
          docker tag docker.io/$TAG $TAG
          docker push docker.io/$TAG

  fromsource-build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        include:
        - platform: ['self-hosted', 'linux', 'ARM64']
          dockerfile: fromsource/Dockerfile.arm64v8

        - platform: ['self-hosted', 'linux', 'ARM']
          dockerfile: fromsource/Dockerfile.arm32v7

        - platform: ['self-hosted', 'Linux', 'X64']
          dockerfile: fromsource/Dockerfile.amd64

    name: Build ${{ matrix.platform }} ${{ matrix.dockerfile }}
    steps:
      - uses: actions/checkout@v2

      - name: extract prepare.tar
        uses: actions/download-artifact@v1
        with:
          name: prepare.tar

      - name: Build Docker Container ${{ matrix.platform }}
        env:
          NECKLESS_PRIVKEY: ${{ secrets.NECKLESS_PRIVKEY }}
        run: |
          tar xf prepare.tar/prepare.tar
          eval $(cat .build_versions)
          GITVER=$(git rev-parse --short HEAD)
          ARCH=$(echo ${{ matrix.dockerfile}} | sed 's/.*\.\([^\.][^\.]*\)$/\1/')
          TAG=fastandfearless/tailscale:$(dirname ${{ matrix.dockerfile}})-${ARCH}-${TAILSCALE_TAILSCALE_VERSION}-${GITVER}
          docker build --build-arg VERSION=${{matrix.tag}} -t $TAG -f ${{ matrix.dockerfile}} .
          neckless kv ls --onlyValue DOCKER_PASSWORD | \
            docker login docker.io -u $(neckless kv ls --onlyValue DOCKER_USER) --password-stdin
          docker tag docker.io/$TAG $TAG
          docker push docker.io/$TAG

